// <auto-generated />
using System;
using DesafioQualyTeam.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DesafioQualyTeam.API.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DesafioQualyTeam.API.Entities.Arquivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Criacao")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("Dados")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<Guid>("DetalhesArquivoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DetalhesArquivoId")
                        .IsUnique();

                    b.ToTable("Arquivos");
                });

            modelBuilder.Entity("DesafioQualyTeam.API.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Criacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ProcessoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessoId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eaa1721b-774b-4312-a984-d105d8d107bb"),
                            Criacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(5222),
                            Nome = "Categoria_A_01",
                            ProcessoId = new Guid("8a0e1284-8b83-4d75-a5b8-7427ac40f7c0"),
                            UltimaAtualizacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(5222)
                        },
                        new
                        {
                            Id = new Guid("73c46241-9209-4a39-81f3-f60419aa4b3d"),
                            Criacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(5236),
                            Nome = "Categoria_A_02",
                            ProcessoId = new Guid("8a0e1284-8b83-4d75-a5b8-7427ac40f7c0"),
                            UltimaAtualizacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(5236)
                        },
                        new
                        {
                            Id = new Guid("15cbc4cd-0a1a-4a9a-871a-f1f4a6457ebd"),
                            Criacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(5243),
                            Nome = "Categoria_A_03",
                            ProcessoId = new Guid("8a0e1284-8b83-4d75-a5b8-7427ac40f7c0"),
                            UltimaAtualizacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(5243)
                        },
                        new
                        {
                            Id = new Guid("06a28f55-71b2-49c2-a4e1-5a8f5b86496e"),
                            Criacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(5260),
                            Nome = "Categoria_B_01",
                            ProcessoId = new Guid("600f3fda-d690-4116-b7ab-1c7740fd46c3"),
                            UltimaAtualizacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(5260)
                        },
                        new
                        {
                            Id = new Guid("c8a5d4f9-8c5f-4211-8449-375e42c76c30"),
                            Criacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(5266),
                            Nome = "Categoria_B_02",
                            ProcessoId = new Guid("600f3fda-d690-4116-b7ab-1c7740fd46c3"),
                            UltimaAtualizacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(5266)
                        },
                        new
                        {
                            Id = new Guid("eb172cfd-7e8b-4f20-8ea6-192579bdd074"),
                            Criacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(5273),
                            Nome = "Categoria_B_03",
                            ProcessoId = new Guid("600f3fda-d690-4116-b7ab-1c7740fd46c3"),
                            UltimaAtualizacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(5273)
                        });
                });

            modelBuilder.Entity("DesafioQualyTeam.API.Entities.DetalhesArquivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Criacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("DocumentoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentoId")
                        .IsUnique();

                    b.ToTable("DetalhesArquivos");
                });

            modelBuilder.Entity("DesafioQualyTeam.API.Entities.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Criacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ProcessoId")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("ProcessoId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("DesafioQualyTeam.API.Entities.Processo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Criacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Processos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8a0e1284-8b83-4d75-a5b8-7427ac40f7c0"),
                            Criacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(4741),
                            Nome = "Processo_01",
                            UltimaAtualizacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(4741)
                        },
                        new
                        {
                            Id = new Guid("600f3fda-d690-4116-b7ab-1c7740fd46c3"),
                            Criacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(4789),
                            Nome = "Processo_02",
                            UltimaAtualizacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(4789)
                        },
                        new
                        {
                            Id = new Guid("ee5fe867-fe4e-40d3-bda6-9ee6d3d71714"),
                            Criacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(4799),
                            Nome = "Processo_03",
                            UltimaAtualizacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(4799)
                        },
                        new
                        {
                            Id = new Guid("b4185d9e-f665-4bee-b764-ade04036354e"),
                            Criacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(4807),
                            Nome = "Processo_04",
                            UltimaAtualizacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(4807)
                        },
                        new
                        {
                            Id = new Guid("66f30ab7-fc63-4347-9c94-755d8c0f790f"),
                            Criacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(4814),
                            Nome = "Processo_05",
                            UltimaAtualizacao = new DateTime(2022, 11, 30, 17, 1, 24, 585, DateTimeKind.Local).AddTicks(4814)
                        });
                });

            modelBuilder.Entity("DesafioQualyTeam.API.Entities.Arquivo", b =>
                {
                    b.HasOne("DesafioQualyTeam.API.Entities.DetalhesArquivo", null)
                        .WithOne("Arquivo")
                        .HasForeignKey("DesafioQualyTeam.API.Entities.Arquivo", "DetalhesArquivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DesafioQualyTeam.API.Entities.Categoria", b =>
                {
                    b.HasOne("DesafioQualyTeam.API.Entities.Processo", "Processo")
                        .WithMany()
                        .HasForeignKey("ProcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Processo");
                });

            modelBuilder.Entity("DesafioQualyTeam.API.Entities.DetalhesArquivo", b =>
                {
                    b.HasOne("DesafioQualyTeam.API.Entities.Documento", null)
                        .WithOne("DetalheArquivo")
                        .HasForeignKey("DesafioQualyTeam.API.Entities.DetalhesArquivo", "DocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DesafioQualyTeam.API.Entities.Documento", b =>
                {
                    b.HasOne("DesafioQualyTeam.API.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioQualyTeam.API.Entities.Processo", "Processo")
                        .WithMany()
                        .HasForeignKey("ProcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Processo");
                });

            modelBuilder.Entity("DesafioQualyTeam.API.Entities.DetalhesArquivo", b =>
                {
                    b.Navigation("Arquivo");
                });

            modelBuilder.Entity("DesafioQualyTeam.API.Entities.Documento", b =>
                {
                    b.Navigation("DetalheArquivo");
                });
#pragma warning restore 612, 618
        }
    }
}
